//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace QuestionsYourFriendsDataAccess
{
    public partial class Question
    {
        #region Primitive Properties
    
        public virtual int id
        {
            get;
            set;
        }
    
        public virtual int id_owner
        {
            get { return _id_owner; }
            set
            {
                if (_id_owner != value)
                {
                    if (Owner != null && Owner.id != value)
                    {
                        Owner = null;
                    }
                    _id_owner = value;
                }
            }
        }
        private int _id_owner;
    
        public virtual int id_receiver
        {
            get { return _id_receiver; }
            set
            {
                if (_id_receiver != value)
                {
                    if (Receiver != null && Receiver.id != value)
                    {
                        Receiver = null;
                    }
                    _id_receiver = value;
                }
            }
        }
        private int _id_receiver;
    
        public virtual string text
        {
            get;
            set;
        }
    
        public virtual string answer
        {
            get;
            set;
        }
    
        public virtual int anom_price
        {
            get;
            set;
        }
    
        public virtual int private_price
        {
            get;
            set;
        }
    
        public virtual bool undesirable
        {
            get;
            set;
        }
    
        public virtual System.DateTime date_pub
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> date_answer
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual User Owner
        {
            get { return _owner; }
            set
            {
                if (!ReferenceEquals(_owner, value))
                {
                    var previousValue = _owner;
                    _owner = value;
                    FixupOwner(previousValue);
                }
            }
        }
        private User _owner;
    
        public virtual User Receiver
        {
            get { return _receiver; }
            set
            {
                if (!ReferenceEquals(_receiver, value))
                {
                    var previousValue = _receiver;
                    _receiver = value;
                    FixupReceiver(previousValue);
                }
            }
        }
        private User _receiver;

        #endregion
        #region Association Fixup
    
        private void FixupOwner(User previousValue)
        {
            if (previousValue != null && previousValue.MyQuestions.Contains(this))
            {
                previousValue.MyQuestions.Remove(this);
            }
    
            if (Owner != null)
            {
                if (!Owner.MyQuestions.Contains(this))
                {
                    Owner.MyQuestions.Add(this);
                }
                if (id_owner != Owner.id)
                {
                    id_owner = Owner.id;
                }
            }
        }
    
        private void FixupReceiver(User previousValue)
        {
            if (previousValue != null && previousValue.QuestionsToMe.Contains(this))
            {
                previousValue.QuestionsToMe.Remove(this);
            }
    
            if (Receiver != null)
            {
                if (!Receiver.QuestionsToMe.Contains(this))
                {
                    Receiver.QuestionsToMe.Add(this);
                }
                if (id_receiver != Receiver.id)
                {
                    id_receiver = Receiver.id;
                }
            }
        }

        #endregion
    }
}
